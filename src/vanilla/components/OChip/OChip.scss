@use 'sass:math';
@import "./_variables";

.o-chip:not(.o-chip--outlined) {
    &.primary,
    &.secondary,
    &.success,
    &.danger,
    &.warning,
    &.info {
        color: map-deep-get($theme-dark, "text", "primary");
    }
}

@include theme(o-chip) using ($theme) {
    border-color: map-get($theme, "dividers");
    color: map-deep-get($theme, "text", "primary");

    &:not(.o-chip--active) {
        background: map-get($theme, "chips");
    }

    @include states($theme);
}

// Block
.o-chip {
    align-items: center;
    cursor: default;
    display: inline-flex;
    line-height: $chip-line-height;
    max-width: 100%;
    outline: none;
    overflow: hidden;
    padding: $chip-padding;
    position: relative;
    text-decoration: none;
    transition-duration: $chip-transition-duration;
    transition-property: box-shadow, opacity;
    transition-timing-function: $chip-transition-fn;
    vertical-align: middle;
    white-space: $chip-white-space;

    &:before {
        background-color: currentColor;
        bottom: 0;
        border-radius: inherit;
        content: "";
        left: 0;
        opacity: 0;
        position: absolute;
        pointer-events: none;
        right: 0;
        top: 0;
    }

    // Important is needed to account for new avatar structure
    .o-avatar {
        height: $chip-avatar-size !important;
        min-width: $chip-avatar-size !important;
        width: $chip-avatar-size !important;
    }

    .o-icon {
        font-size: $chip-icon-size;
    }

    .o-avatar,
    .o-icon {
        @include ltr() {
            &--left {
                margin-left: $chip-icon-margin-before;
                margin-right: $chip-icon-margin-after;
            }

            &--right {
                margin-left: $chip-icon-margin-after;
                margin-right: $chip-icon-margin-before;
            }
        }

        @include rtl() {
            &--left {
                margin-left: $chip-icon-margin-after;
                margin-right: $chip-icon-margin-before;
            }

            &--right {
                margin-left: $chip-icon-margin-before;
                margin-right: $chip-icon-margin-after;
            }
        }
    }

    &:not(.o-chip--no-color) {
        .o-icon {
            color: inherit;
        }
    }
}
// Elements
.o-chip {
    .o-chip__close.o-icon {
        font-size: $chip-close-size;
        max-height: $chip-close-size;
        max-width: $chip-close-size;
        user-select: none;

        &.o-icon--right {
            @include ltr() {
                margin-right: $chip-icon-right-margin-after;
            }

            @include rtl() {
                margin-left: $chip-icon-right-margin-after;
            }
        }

        &:hover,
        &:focus,
        &:active {
            opacity: 0.72;
        }
    }

    .o-chip__content {
        align-items: center;
        display: inline-flex;
        height: 100%;
        max-width: 100%;
    }
}

// Modifiers
.o-chip--active {
    .o-icon {
        color: inherit;
    }
}

.o-chip--link {
    &::before {
        transition: opacity $primary-transition;
    }

    &:focus::before {
        opacity: $chip-link-focus-opacity;
    }
}

.o-chip--clickable {
    cursor: pointer;
    user-select: none;

    &:active {
        @include elevation(2);
    }
}

.o-chip--disabled {
    opacity: $chip-disabled-opacity;
    pointer-events: none;
    user-select: none;
}

.o-chip__filter {
    // TODO: Figure out why the absence
    // of this breaks the transition
    max-width: $chip-filter-max-width;

    // Increase specificity to
    // overwrite theme style
    &.o-icon {
        color: inherit;
    }

    &.expand-x-transition-leave-active,
    &.expand-x-transition-enter {
        margin: 0;
    }
}
.o-chip--pill {
    .o-chip__filter {
        margin-right: $chip-pill-filter-margin;
    }

    .o-avatar {
        height: $chip-pill-avatar-size !important;
        width: $chip-pill-avatar-size !important;
    }

    .o-avatar {
        @include ltr() {
            &--left {
                margin-left: $chip-pill-avatar-margin-before;
            }

            &--right {
                margin-right: $chip-pill-avatar-margin-before;
            }
        }

        @include rtl() {
            &--left {
                margin-right: $chip-pill-avatar-margin-before;
            }

            &--right {
                margin-left: $chip-pill-avatar-margin-before;
            }
        }
    }
}
.o-chip--label {
    border-radius: $chip-label-border-radius !important;
}
.o-chip.o-chip--outlined {
    border-width: $icon-outlined-border-width;
    border-style: solid;

    &.o-chip--active:before {
        opacity: $chip-outlined-active-opacity;
    }
    .o-icon {
        color: inherit;
    }
    // Needs increased specificity
    &.o-chip.o-chip {
        background-color: transparent !important;
    }
}
// Needs increased specificity
// to overwrite theme color
.o-chip.o-chip--selected {
    background: transparent;

    &:after {
        opacity: $chip-selected-opacity;
    }
}
.o-chip {
    @each $name, $size in $icon-sizes {
        &.o-size--#{$name} {
            border-radius: #{math.div(map-get($size, "height"), 2)}px;
            font-size: #{map-get($size, "font-size")}px;
            height: #{map-get($size, "height")}px;
        }
    }
}
