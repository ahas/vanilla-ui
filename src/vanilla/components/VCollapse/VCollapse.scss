@import "./_variables.scss";

// Theme
@include theme(v-collapse) using ($material) {
    .v-collapse-item {
        background-color: map-get($material, "cards");
        color: map-deep-get($material, "text", "primary");

        &--disabled {
            color: map-deep-get($material, "text", "disabled");
        }

        &:not(:first-child)::after {
            border-color: map-get($material, "dividers");
        }
    }

    .v-collapse-item-header {
        .v-collapse-item-header__icon {
            .v-icon {
                color: map-deep-get($material, "icons", "active");
            }
        }
    }

    &.v-collapse--focusable {
        .v-collapse-item-header {
            @include states($material);
        }
    }

    &.v-collapse--hover {
        > .v-collapse-item {
            > .v-collapse-item-header {
                &:hover {
                    @include states($material);
                }
            }
        }
    }
}

// Block
.v-collapse {
    border-radius: $collapse-border-radius;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    list-style-type: none;
    padding: 0;
    width: 100%;
    z-index: 1;

    > * {
        cursor: auto;
    }

    > *:first-child {
        border-top-left-radius: inherit;
        border-top-right-radius: inherit;
    }

    > *:last-child {
        border-bottom-left-radius: inherit;
        border-bottom-right-radius: inherit;
    }

    // round corners on non-accordion/tile panels
    &:not(&--accordion):not(&--tile) {
        > .v-collapse-item {
            &--active {
                border-radius: $collapse-border-radius;

                + .v-collapse-item {
                    border-top-left-radius: $collapse-border-radius;
                    border-top-right-radius: $collapse-border-radius;
                }
            }

            &--next-active {
                border-bottom-left-radius: $collapse-border-radius;
                border-bottom-right-radius: $collapse-border-radius;

                .v-collapse-item-header {
                    border-bottom-left-radius: inherit;
                    border-bottom-right-radius: inherit;
                }
            }
        }
    }
}

// Element
.v-collapse-item {
    flex: 1 0 100%;
    max-width: 100%;
    position: relative;
    transition: 0.3s map-get($transition, "swing");

    &::before {
        border-radius: inherit;
        content: "";
        bottom: 0;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
        z-index: -1;
        @include elevationTransition();
        @include elevation(2);
    }

    &:not(:first-child)::after {
        border-top: thin solid;
        content: "";
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
        transition: 0.2s border-color map-get($transition, "fast-out-slow-in"), 0.2s opacity map-get($transition, "fast-out-slow-in");
    }

    &--disabled {
        .v-collapse-item-header {
            pointer-events: none;
        }
    }

    &--active {
        &:not(:first-child),
        + .v-collapse-item {
            margin-top: $collapse-active-margin;

            &::after {
                opacity: 0;
            }
        }

        > .v-collapse-item-header {
            min-height: $collapse-active-header-min-height;
        }

        > .v-collapse-item-header--active .v-collapse-item-header__icon {
            &:not(.v-collapse-item-header__icon--disable-rotate) .v-icon {
                transform: rotate(-180deg);
            }
        }
    }
}

.v-collapse-item-header__icon {
    display: inline-flex;
    margin-bottom: -4px;
    margin-top: -4px;
    user-select: none;

    @include ltr() {
        margin-left: auto;
    }

    @include rtl() {
        margin-right: auto;
    }
}

.v-collapse-item-header {
    align-items: center;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    display: flex;
    font-size: $collapse-header-font-size;
    line-height: 1;
    min-height: $collapse-header-min-height;
    outline: none;
    padding: $collapse-header-padding;
    position: relative;
    transition: 0.3s min-height map-get($transition, "swing");
    width: 100%;

    @include ltr() {
        text-align: left;
    }

    @include rtl() {
        text-align: right;
    }

    &:not(.v-collapse-item-header--mousedown):focus::before {
        opacity: 0.12;
    }

    &:before {
        background-color: currentColor;
        border-radius: inherit;
        bottom: 0;
        content: "";
        left: 0;
        opacity: 0;
        pointer-events: none;
        position: absolute;
        right: 0;
        top: 0;
        transition: 0.3s opacity map-get($transition, "swing");
    }

    > *:not(.v-collapse-item-header__icon) {
        flex: 1 1 auto;
    }
}

.v-collapse-item-content {
    display: flex;

    &__wrap {
        padding: $collapse-content-padding;
        flex: 1 1 auto;
        max-width: 100%;
    }
}

// Modifier
.v-collapse--accordion {
    > .v-collapse-item {
        margin-top: 0;

        &::after {
            opacity: 1;
        }
    }
}

.v-collapse--popout {
    > .v-collapse-item {
        max-width: $collapse-popout-max-width;

        &--active {
            max-width: $collapse-popout-active-max-width;
        }
    }
}

.v-collapse--inset {
    > .v-collapse-item {
        max-width: $collapse-inset-max-width;

        &--active {
            max-width: $collapse-inset-active-max-width;
        }
    }
}

.v-collapse--flat {
    > .v-collapse-item {
        &::after {
            border-top: none;
        }

        &::before {
            @include elevation(0);
        }
    }
}

.v-collapse--tile {
    border-radius: 0;

    > .v-collapse-item {
        &::before {
            border-radius: 0;
        }
    }
}
