@use 'sass:math';
@import "./mixins";

@mixin make-col($size, $columns: $grid-items) {
    flex: 0 0 percentage(math.div($size, $columns));
    max-width: percentage(math.div($size, $columns));
}

@mixin make-col-offset($size, $columns: $grid-items) {
    $num: math.div($size, $columns);
    @include ltr() {
        margin-left: if($num == 0, 0, percentage($num));
    }
    @include rtl() {
        margin-right: if($num == 0, 0, percentage($num));
    }
}

@mixin make-row-columns($columns: $grid-items, $gutter: $grid-gutter, $breakpoints: $grid-breakpoints) {
    %grid-column-first {
        padding-left: 0;
    }
    %grid-column-last {
        padding-right: 0;
    }
    %grid-column {
        width: 100%;
        padding: math.div($gutter, 2);
    }
    @each $breakpoint in map-keys($breakpoints) {
        $infix: breakpoint-infix($breakpoint, $breakpoints);
        // Allow columns to stretch full width below their breakpoints
        @for $i from 1 through $columns {
            .col#{$infix}-#{$i}:first-child {
                @extend %grid-column-first;
            }
            .col#{$infix}-#{$i} {
                @extend %grid-column;
            }
            .col#{$infix}-#{$i}:last-child {
                @extend %grid-column-last;
            }
        }
        .col#{$infix}:first-child,
        .col#{$infix}-auto:first-child {
            @extend %grid-column-first;
        }
        .col#{$infix},
        .col#{$infix}-auto {
            @extend %grid-column;
        }
        .col#{$infix}:last-child,
        .col#{$infix}-auto:last-child {
            @extend %grid-column-last;
        }
        @include media-breakpoint-up($breakpoint, $breakpoints) {
            // Provide basic `.col-{bp}` classes for equal-width flexbox columns
            .col#{$infix} {
                flex-basis: 0;
                flex-grow: 1;
                max-width: 100%;
            }
            .col#{$infix}-auto {
                flex: 0 0 auto;
                width: auto;
                max-width: 100%; // Reset earlier grid tiers
            }
            @for $i from 1 through $columns {
                .col#{$infix}-#{$i} {
                    @include make-col($i, $columns);
                }
            }
            // `$columns - 1` because offsetting by the width of an entire row isn't possible
            @for $i from 0 through $columns - 1 {
                @if not($infix == "" and $i == 0) {
                    // Avoid emitting useless .offset-0
                    .offset#{$infix}-#{$i} {
                        @include make-col-offset($i, $columns);
                    }
                }
            }
        }
    }
}

@include make-row-columns();
